// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address, a=one, b=two, c=three, d=four, e=five, f=six, g=seven, h=eight);
    Register(in=in,load=one,out=o1);
    Register(in=in,load=two,out=o2);
    Register(in=in,load=three,out=o3);
    Register(in=in,load=four,out=o4);
    Register(in=in,load=five,out=o5);
    Register(in=in,load=six,out=o6);
    Register(in=in,load=seven,out=o7);
    Register(in=in,load=eight,out=o8);
    Mux8Way16(a=o1, b=o2, c=o3, d=o4, e=o5, f=o6, g=o7, h=o8, sel=address, out=out);
}
